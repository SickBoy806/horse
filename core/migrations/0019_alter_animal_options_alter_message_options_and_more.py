# Generated by Django 5.2.4 on 2025-08-01 08:20

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0018_message_is_deleted'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='animal',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='message',
            options={'ordering': ['-timestamp']},
        ),
        migrations.AlterModelOptions(
            name='notification',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='report',
            options={'ordering': ['-date_created']},
        ),
        migrations.AlterModelOptions(
            name='supportticket',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='systemlog',
            options={'ordering': ['-timestamp']},
        ),
        migrations.AlterModelOptions(
            name='ticketreply',
            options={'ordering': ['created_at']},
        ),
        migrations.RemoveField(
            model_name='message',
            name='branch',
        ),
        migrations.AddField(
            model_name='animal',
            name='assigned_vet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vet_animals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='animal',
            name='breed',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='animal',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='animal',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='link',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('task_assigned', 'Task Assigned'), ('task_completed', 'Task Completed'), ('emergency_reported', 'Emergency Reported'), ('medical_record_added', 'Medical Record Added'), ('animal_assigned', 'Animal Assigned'), ('message_received', 'Message Received'), ('system_alert', 'System Alert')], default='info', max_length=30),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='notification',
            name='title',
            field=models.CharField(default='Default Title', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='report',
            name='file',
            field=models.FileField(blank=True, null=True, upload_to='reports/'),
        ),
        migrations.AddField(
            model_name='report',
            name='report_type',
            field=models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('incident', 'Incident Report'), ('medical', 'Medical Report'), ('custom', 'Custom Report')], default='general', max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='supportticket',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='supportticket',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10),
        ),
        migrations.AddField(
            model_name='supportticket',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='systemlog',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='animal',
            name='assigned_users',
            field=models.ManyToManyField(blank=True, related_name='assigned_animals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='animal',
            name='force_number',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='animal',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='animal_photos/'),
        ),
        migrations.AlterField(
            model_name='animal',
            name='species',
            field=models.CharField(choices=[('dog', 'Dog'), ('horse', 'Horse'), ('cat', 'Cat'), ('other', 'Other')], max_length=100),
        ),
        migrations.AlterField(
            model_name='message',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='report',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='core.branch'),
        ),
        migrations.AlterField(
            model_name='report',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='report',
            name='date_created',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='supportticket',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.branch'),
        ),
        migrations.AlterField(
            model_name='supportticket',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='supportticket',
            name='status',
            field=models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20),
        ),
        migrations.AlterField(
            model_name='systemlog',
            name='action',
            field=models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('assign', 'Assign Task'), ('approve', 'Approve Report'), ('complete_task', 'Complete Task'), ('emergency_report', 'Emergency Report'), ('error', 'Error'), ('other', 'Other')], max_length=20),
        ),
        migrations.AlterField(
            model_name='systemlog',
            name='branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.branch'),
        ),
        migrations.AlterField(
            model_name='systemlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='system_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AnimalLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('feeding', 'Feeding'), ('cleaning', 'Cleaning'), ('exercise', 'Exercise'), ('health_observation', 'Health Observation'), ('incident', 'Incident'), ('training', 'Training'), ('grooming', 'Grooming')], max_length=20)),
                ('notes', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='activity_photos/')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='core.animal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animal_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DailyActivityReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('summary', models.TextField()),
                ('issues_faced', models.TextField(blank=True, null=True)),
                ('hours_worked', models.DecimalField(decimal_places=2, max_digits=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animals_cared_for', models.ManyToManyField(blank=True, to='core.animal')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.branch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='EmergencyIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('injury', 'Injury'), ('escape', 'Escape'), ('illness', 'Illness'), ('aggression', 'Aggression'), ('equipment_failure', 'Equipment Failure'), ('fire', 'Fire'), ('theft', 'Theft'), ('other', 'Other')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('description', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='emergency_photos/')),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('date_reported', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('animal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='core.animal')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_incidents', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_incidents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_reported'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.CharField(choices=[('leash', 'Leash'), ('feeding_kit', 'Feeding Kit'), ('first_aid', 'First Aid Kit'), ('cleaning_tools', 'Cleaning Tools'), ('training_gear', 'Training Gear'), ('medical_equipment', 'Medical Equipment'), ('grooming_tools', 'Grooming Tools'), ('other', 'Other')], max_length=100)),
                ('action', models.CharField(choices=[('check_out', 'Checked Out'), ('check_in', 'Returned'), ('maintenance', 'Maintenance'), ('repair', 'Repair')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('breeding', 'Breeding'), ('lab_diagnosis', 'Lab Diagnosis'), ('deworming', 'Deworming'), ('postmortem', 'Postmortem'), ('transfer', 'Transfer'), ('referral', 'Referral'), ('dipping', 'Dipping'), ('surgery', 'Surgery'), ('vaccination', 'Vaccination'), ('checkup', 'Routine Checkup'), ('emergency', 'Emergency')], max_length=50)),
                ('diagnosis', models.TextField()),
                ('treatment', models.TextField()),
                ('document', models.FileField(blank=True, null=True, upload_to='medical_documents/')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('mating_date', models.DateField(blank=True, null=True)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('breeding_method', models.CharField(blank=True, max_length=100, null=True)),
                ('lab_test_name', models.CharField(blank=True, max_length=255, null=True)),
                ('test_result', models.TextField(blank=True, null=True)),
                ('sample_type', models.CharField(blank=True, max_length=100, null=True)),
                ('dewormer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('next_deworming_date', models.DateField(blank=True, null=True)),
                ('cause_of_death', models.TextField(blank=True, null=True)),
                ('postmortem_findings', models.TextField(blank=True, null=True)),
                ('transfer_from', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_to', models.CharField(blank=True, max_length=255, null=True)),
                ('reason_for_transfer', models.TextField(blank=True, null=True)),
                ('referred_to', models.CharField(blank=True, max_length=255, null=True)),
                ('referral_reason', models.TextField(blank=True, null=True)),
                ('dip_type', models.CharField(blank=True, max_length=100, null=True)),
                ('dipping_location', models.CharField(blank=True, max_length=255, null=True)),
                ('surgery_type', models.CharField(blank=True, max_length=255, null=True)),
                ('anesthesia_used', models.CharField(blank=True, max_length=255, null=True)),
                ('vaccine_name', models.CharField(blank=True, max_length=255, null=True)),
                ('next_due_date', models.DateField(blank=True, null=True)),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='core.animal')),
                ('veterinarian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_recorded'],
            },
        ),
        migrations.CreateModel(
            name='VetTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('due_date', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vet_tasks', to='core.animal')),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_vet_tasks', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_vet_tasks', to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.branch')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.DeleteModel(
            name='Task',
        ),
    ]
