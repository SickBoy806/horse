# Generated by Django 5.2.4 on 2025-08-12 06:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0021_vettask_date_assigned'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='report',
            name='role_category',
            field=models.CharField(choices=[('user', 'User (Trainer / Worker)'), ('veterinarian', 'Veterinarian'), ('admin', 'Admin'), ('superadmin', 'Super Admin')], default=1, max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='report',
            name='specific_report_type',
            field=models.CharField(choices=[('training_progress', 'Training Progress Report'), ('training_log', 'Daily/Weekly Training Log'), ('performance_eval', 'Performance Evaluation'), ('behavior_assessment', 'Behavioral Assessment Report'), ('missed_training', 'Missed / Incomplete Training Sessions'), ('training_schedule', 'Training Schedule Report'), ('special_skills', 'Specialized Skill Tracking'), ('daily_care', 'Daily Care Log'), ('inventory', 'Inventory & Supplies Report'), ('facility_maintenance', 'Facility Maintenance Report'), ('animal_condition', 'Animal Condition Check'), ('work_shift', 'Work Shift Log'), ('incident', 'Incident Report'), ('medical_record', 'Medical Record Report'), ('vet_activity_log', 'Daily Veterinary Activity Log'), ('treatment_medication', 'Treatment & Medication Report'), ('vaccination_schedule', 'Vaccination Schedule & Compliance Report'), ('lab_results', 'Lab Test Results Report'), ('injury_illness', 'Injury/Illness Incident Report'), ('disease_tracking', 'Disease Outbreak Tracking Report'), ('staff_attendance', 'Staff Attendance Report'), ('animal_assignment', 'Animal Assignment Report'), ('facility_resource', 'Facility Resource Report'), ('task_completion', 'Task Completion Status'), ('support_requests', 'Support Requests Report'), ('animal_acquisition', 'Animal Acquisition & Retirement Report'), ('operations_summary', 'Overall Operations Summary'), ('cross_branch_performance', 'Cross-Branch Performance Report'), ('financial_resource', 'Financial & Resource Usage Report'), ('incident_safety', 'Incident & Safety Reports'), ('compliance_audit', 'Compliance & Audit Report'), ('staff_productivity', 'Staff Productivity Report'), ('long_term_performance', 'Long-Term Animal Performance & Health Trends')], default='general', max_length=50),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='TrainingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_tracking', models.BooleanField(default=False, verbose_name='Tracking')),
                ('training_sniffer', models.BooleanField(default=False, verbose_name='Sniffer')),
                ('training_explosives', models.BooleanField(default=False, verbose_name='Explosives')),
                ('training_govt_trophies', models.BooleanField(default=False, verbose_name='Government Trophies')),
                ('training_narcotics', models.BooleanField(default=False, verbose_name='Narcotics')),
                ('training_other', models.TextField(blank=True, help_text='Describe any other training', null=True, verbose_name='Other Training')),
                ('training_place', models.CharField(max_length=255, verbose_name='Training Place')),
                ('training_duration', models.CharField(help_text='e.g., 2 weeks, 30 hours', max_length=100, verbose_name='Duration')),
                ('training_time', models.CharField(help_text='e.g., Morning, 9:00 AM - 5:00 PM', max_length=100, verbose_name='Training Time')),
                ('training_handler', models.CharField(max_length=100, verbose_name='Training Handler')),
                ('date_recorded', models.DateField(auto_now_add=True, verbose_name='Date Recorded')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_records', to='core.animal')),
            ],
            options={
                'ordering': ['-date_recorded'],
            },
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('trainer', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=50, null=True)),
                ('result', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conducted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_training_sessions', to=settings.AUTH_USER_MODEL)),
                ('training_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='core.trainingrecord')),
            ],
        ),
    ]
